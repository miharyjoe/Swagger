openapi: 3.0.1
info:
  title: STD21004 API
  description: Global description of my API
  version: 1.0.0
servers:
  - url: https://STD21004.com
tags:
  - name: Students
  - name: Courses
paths:
  /students:
    get:
      tags:
        - Students
      operationId: getStudents
      summary: Get all students
      description: Get all students with details
      parameters:
        - name: page
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: List of students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        '400':
          description: Bad request
    post:
      tags:
        - Students
      operationId: createStudent
      summary: Create new student
      description: Create new student
      requestBody:
        description: Student to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStudent'
        required: true
      responses:
        '200':
          description: List of students
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '400':
          description: Bad request
    put:
      tags:
        - Students
      operationId: ModifyStudents
      summary: Modify all students
      description: modify all students with details
      parameters:
        - name: page
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: List of students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        '400':
          description: Bad request
    patch:
      tags:
        - Students
      summary: update  student
      description: update student
      requestBody:
        description: Student to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
            examples:
              changename:
                summary: change name
                description: Change name
                value:
                  id: 10
                  name: Rakoto
              changephonenuber:
                summary: Change phone number
                description: Change phone number
                value:
                  id: 10
                  phonenumber:
                    - counry-code: '+261'
                      number: '345194493'
              changeaddress:
                summary: Change address
                description: Change address
                value:
                  id: 10
                  address: Ivandry

      responses:
        '200':
          description: List of students
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '400':
          description: Bad request
  /students/{id}:
    get:
      tags:
        - Students
      summary: Get a student by id
      description: Get a student by id with details
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Here's your student
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        '400':
          description: Bad request
    delete:
      tags:
        - Students
      summary: Delete a student
      description: Delete a student by id
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Delete succesfully
        '400':
          description: Bad request
  /Courses:
    get:
      tags:
        - Courses
      operationId: getCourses
      summary: Get all courses
      description: Get all courses with details
      parameters:
        - name: page
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: List of courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        '400':
          description: Bad request
    post:
      tags:
        - Courses
      operationId: createCourses
      summary: Create new courses
      description: Create new courses
      requestBody:
        description: Courses to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCourses'
        required: true
      responses:
        '200':
          description: List of courses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        '400':
          description: Bad request
    put:
      tags:
        - Courses
      operationId: modifyCourses
      summary: modify courses
      description: modify all courses with details
      parameters:
        - name: page
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: List of courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateCourses'
        '400':
          description: Bad request
    patch:
      tags:
        - Courses
      operationId: updateCourses
      summary: update new courses
      description: update new courses
      requestBody:
        description: Courses to be update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCourses'
        required: true
      responses:
        '200':
          description: List of courses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCourses'
        '400':
          description: Bad request
  /courses/{id}:
    get:
      tags:
        - Courses
      summary: Get a couses by id
      description: Get a courses by id with details
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Here's your courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateCourses'
        '400':
          description: Bad request
    delete:
      tags:
        - Courses
      summary: Delete a courses
      description: Delete a courses by id
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Delete succesfully
        '400':
          description: Bad request
components:
  schemas:
    CreateStudent:
      type: object
      properties:
        name:
          type: string
          example: Rakoto
        birth_date:
          type: string
          format: date
          example: '2022-01-01'
        address:
          type: string
          example: Ivandry
        phonenumber:
          type: array
          items:
            $ref: '#/components/schemas/phonenumber'
    phonenumber:
      type: object
      properties:
        country-code:
          type: string
          example: '+261'
        number:
          type: string
          example: '345194493'
    Student:
      allOf:
        - $ref: '#/components/schemas/CreateStudent'
      type: object
      properties:
        id:
          type: integer
          example: 10
    CreateCourses:
      type: object
      properties:
        name:
          type: string
          example: ELP P1
        teacher:
          type: string
          example: Ryan
        create_date:
          type: string
          format: date
          example: '2022-01-01'
    Course:
      allOf:
        - $ref: '#/components/schemas/CreateCourses'
      type: object
      properties:
        id:
          type: integer
          example: 10
